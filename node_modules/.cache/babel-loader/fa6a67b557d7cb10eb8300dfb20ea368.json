{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Projetos/projeto_09_cineflixReact/src/SeatsPage/SeatsPage.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Footer from \"../others/Footer/Footer\";\nimport Loading from \"../others/Loading/Loading\";\nimport Title from \"../others/Title/Title\";\nimport Seat from \"./Seat/Seat\";\nimport Glossary from \"./Glossary/Glossary\";\nimport Form from \"./Form/Form\";\nimport Button from \"../others/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeatsPage(_ref) {\n  _s();\n\n  let {\n    setReservationData\n  } = _ref;\n  const [seatsDATA, setSeatsDATA] = useState(null);\n  const {\n    assentosId\n  } = useParams();\n  useEffect(() => {\n    axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${assentosId}/seats`).then(response => setSeatsDATA(response.data)).catch(error => alert(error));\n  }, []);\n  let navigate = useNavigate();\n  const [nameValue, setNameValue] = useState(\"\");\n  const [CPFValue, SetCPFValue] = useState(\"\");\n  const [selectedSeats, setSelectedSeats] = useState([]);\n\n  function toggleSelect(seatId) {\n    let newSelectedSeats = [...selectedSeats];\n\n    if (newSelectedSeats.includes(seatId)) {\n      newSelectedSeats.splice(newSelectedSeats.indexOf(seatId), 1);\n    } else {\n      newSelectedSeats.push(seatId);\n    }\n\n    setSelectedSeats(newSelectedSeats);\n  }\n\n  function finish() {\n    if (verifyInfo()) {\n      setReservationData({\n        ids: selectedSeats,\n        name: nameValue,\n        cpf: CPFValue,\n        movie: seatsDATA.movie.title,\n        date: seatsDATA.day.date,\n        showtime: seatsDATA.name\n      });\n      navigate.push(\"/sucesso\");\n    }\n  }\n\n  function verifyInfo() {\n    if (nameValue && CPFValue && selectedSeats[0] !== undefined) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (seatsDATA === null) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"seats-page\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Selecione o(s) assento(s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"seats-box\",\n      children: [seatsDATA.seats.map((seat, i) => /*#__PURE__*/_jsxDEV(Seat, {\n        number: seat.name,\n        isAvailable: seat.isAvailable,\n        id: seat.id,\n        toggleSelect: toggleSelect,\n        isSelected: selectedSeats.includes(seat.id)\n      }, seat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Glossary, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      title: \"nome\",\n      value: nameValue,\n      attValue: event => setNameValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      title: \"CPF\",\n      value: CPFValue,\n      attValue: event => SetCPFValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onclick: finish,\n      text: \"Reservar assento(s)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      posterURL: seatsDATA.movie.posterURL,\n      movieTitle: seatsDATA.movie.title,\n      id: seatsDATA.movie.id,\n      weekday: seatsDATA.day.weekday,\n      showtime: seatsDATA.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SeatsPage, \"krO9jMK3JYp7+LpaUGKFiaeo7N0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = SeatsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeatsPage\");","map":{"version":3,"sources":["/home/guilherme/Projetos/projeto_09_cineflixReact/src/SeatsPage/SeatsPage.js"],"names":["axios","useState","useEffect","useParams","useNavigate","Footer","Loading","Title","Seat","Glossary","Form","Button","SeatsPage","setReservationData","seatsDATA","setSeatsDATA","assentosId","get","then","response","data","catch","error","alert","navigate","nameValue","setNameValue","CPFValue","SetCPFValue","selectedSeats","setSelectedSeats","toggleSelect","seatId","newSelectedSeats","includes","splice","indexOf","push","finish","verifyInfo","ids","name","cpf","movie","title","date","day","showtime","undefined","seats","map","seat","i","isAvailable","id","event","target","value","posterURL","weekday"],"mappings":"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","sourcesContent":["import \"./styles.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Footer from \"../others/Footer/Footer\";\nimport Loading from \"../others/Loading/Loading\";\nimport Title from \"../others/Title/Title\";\nimport Seat from \"./Seat/Seat\";\nimport Glossary from \"./Glossary/Glossary\";\nimport Form from \"./Form/Form\";\nimport Button from \"../others/Button/Button\";\n\nexport default function SeatsPage({ setReservationData }) {\n    const [seatsDATA, setSeatsDATA] = useState(null);\n    const { assentosId } = useParams()\n    useEffect(() => {\n        axios.get(`https://mock-api.driven.com.br/api/v4/cineflex/showtimes/${assentosId}/seats`)\n            .then((response) => setSeatsDATA(response.data))\n            .catch((error) => alert(error))\n    }, [])\n    let navigate = useNavigate();\n    const [nameValue, setNameValue] = useState(\"\");\n    const [CPFValue, SetCPFValue] = useState(\"\");\n    const [selectedSeats, setSelectedSeats] = useState([]);\n    \n    function toggleSelect(seatId) {\n        let newSelectedSeats = [...selectedSeats];\n        if(newSelectedSeats.includes(seatId)){\n            newSelectedSeats.splice(newSelectedSeats.indexOf(seatId), 1);\n        }else{\n            newSelectedSeats.push(seatId);\n        }\n        setSelectedSeats(newSelectedSeats);\n    }\n    function finish() {\n        if(verifyInfo()){\n            setReservationData({\n                ids: selectedSeats,\n                name: nameValue,\n                cpf: CPFValue,\n                movie: seatsDATA.movie.title,\n                date: seatsDATA.day.date,\n                showtime: seatsDATA.name\n            });\n            navigate.push(\"/sucesso\");\n        }\n    }\n    function verifyInfo() {\n        if (nameValue && CPFValue && selectedSeats[0] !== undefined) {\n            return true;\n        }\n        return false;\n    }\n    if (seatsDATA === null) {\n        return (\n            <Loading />\n        )\n    }\n    return (\n        <article className=\"seats-page\" >\n            <Title text=\"Selecione o(s) assento(s)\" />\n            <section className=\"seats-box\">\n                {seatsDATA.seats.map((seat, i) => (\n                    <Seat\n                        number={seat.name}\n                        isAvailable={seat.isAvailable}\n                        key={seat.id}\n                        id={seat.id}\n                        toggleSelect={toggleSelect}\n                        isSelected={selectedSeats.includes(seat.id)}\n                    />))}\n                <Glossary />\n            </section>\n            <Form title=\"nome\" value={nameValue} attValue={(event) => setNameValue(event.target.value)} />\n            <Form title=\"CPF\" value={CPFValue} attValue={(event) => SetCPFValue(event.target.value)} />\n            <Button onclick={finish} text=\"Reservar assento(s)\" />\n            <Footer\n                posterURL={seatsDATA.movie.posterURL}\n                movieTitle={seatsDATA.movie.title}\n                id={seatsDATA.movie.id}\n                weekday={seatsDATA.day.weekday}\n                showtime={seatsDATA.name}\n            />\n        </article>\n    )\n}"]},"metadata":{},"sourceType":"module"}