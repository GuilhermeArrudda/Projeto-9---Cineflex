{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/Projetos/projeto_09_cineflixReact/src/HomePage/HomePage.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport Title from \"../others/Title/Title\";\nimport MoviePoster from \"../others/MoviePoster/MoviePoster\";\nimport Loading from \"../others/Loading/Loading\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n\n  const [movies, setMovies] = useState(null);\n  useEffect(() => {\n    axios.get(\"https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/movies\").then(response => setMovies(response.data)).catch(error => alert(error));\n  }, []);\n\n  if (movies === null) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Selecione o filme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movie-box\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MoviePoster, {\n        id: movie.id,\n        src: movie.posterURL,\n        alt: `Poster de ${movie.title}`\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomePage, \"OBGH+5ouJdp+Pb/yVe58YXCOits=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/home/guilherme/Projetos/projeto_09_cineflixReact/src/HomePage/HomePage.js"],"names":["Title","MoviePoster","Loading","axios","useState","useEffect","HomePage","movies","setMovies","get","then","response","data","catch","error","alert","map","movie","id","posterURL","title"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,IAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACM,GAAN,CAAU,oEAAV,EACCC,IADD,CACOC,QAAD,IAAcH,SAAS,CAACG,QAAQ,CAACC,IAAV,CAD7B,EAECC,KAFD,CAEQC,KAAD,IAAWC,KAAK,CAACD,KAAD,CAFvB;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAGP,MAAM,KAAK,IAAd,EAAmB;AACf,wBACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACKA,MAAM,CAACS,GAAP,CAAYC,KAAD,iBACZ,QAAC,WAAD;AAEI,QAAA,EAAE,EAAEA,KAAK,CAACC,EAFd;AAGI,QAAA,GAAG,EAAED,KAAK,CAACE,SAHf;AAII,QAAA,GAAG,EAAG,aAAYF,KAAK,CAACG,KAAM;AAJlC,SACSH,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA5BuBZ,Q;;KAAAA,Q","sourcesContent":["import \"./styles.css\";\nimport Title from \"../others/Title/Title\";\nimport MoviePoster from \"../others/MoviePoster/MoviePoster\";\nimport Loading from \"../others/Loading/Loading\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState(null);\n    useEffect(() => {\n        axios.get(\"https://mock-api.bootcamp.respondeai.com.br/api/v3/cineflex/movies\")\n        .then((response) => setMovies(response.data))\n        .catch((error) => alert(error))\n    }, [])\n\n    if(movies === null){\n        return (\n            <Loading />\n        )\n    }\n\n    return (\n        <main className=\"home\" >\n            <Title text=\"Selecione o filme\" />\n            <ul className=\"movie-box\" >\n                {movies.map((movie) => (\n                <MoviePoster\n                    key={movie.id}\n                    id={movie.id}\n                    src={movie.posterURL}\n                    alt={`Poster de ${movie.title}`}\n                />))}\n            </ul>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}